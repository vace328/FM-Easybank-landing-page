@import url("https://fonts.googleapis.com/css2?family=Public+Sans:wght@300;400;700&display=swap");
/*----------  base
------------------------------------------------------------------------------*/
/* http://meyerweb.com/eric/tools/css/reset/ 
   v2.0 | 20110126
   License: none (public domain)
*/
html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header, hgroup,
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline;
}

/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure,
footer, header, hgroup, menu, nav, section {
  display: block;
}

body {
  line-height: 1;
}

ol, ul {
  list-style: none;
}

blockquote, q {
  quotes: none;
}

blockquote:before, blockquote:after,
q:before, q:after {
  content: "";
  content: none;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

p, a, li, h2, span, div {
  font-family: "Public Sans";
  font-size: 15px;
  color: hsl(233deg, 8%, 62%);
  font-weight: 400;
}

p {
  line-height: 25px;
  letter-spacing: -0.015em;
}

a {
  text-decoration: none;
}

button {
  font-family: "Public Sans";
  font-size: 15px;
  font-size: 14px;
  color: hsl(0deg, 0%, 100%);
  font-weight: 700;
}

h2 {
  color: hsl(233deg, 26%, 24%);
  font-size: 32px;
}

h3 {
  font-size: 20px;
  letter-spacing: -0.02em;
  color: hsl(233deg, 26%, 24%);
}

@media only screen and (min-width: 850px) {
  p {
    font-size: 19px;
    line-height: 28px;
    letter-spacing: -0.038em;
  }
}
/*----------  components
------------------------------------------------------------------------------*/
button {
  height: 44px;
  width: 163px;
  border-radius: 50px;
  border: none;
  background: rgb(49, 211, 92);
  background: linear-gradient(90deg, rgb(49, 211, 92) 0%, rgb(43, 183, 218) 100%);
  cursor: pointer;
}

button:hover {
  opacity: 0.7;
}

.header-cta {
  display: none;
}

.burger-bg {
  width: 24px;
  height: 20px;
  display: flex;
  align-items: center;
}

.burger-btn {
  display: block;
}

.burger-btn span,
.burger-btn span::before,
.burger-btn span::after {
  display: block;
  width: 24px;
  height: 1px;
  background-color: hsl(233deg, 8%, 62%);
  margin-left: auto;
  position: relative;
  transition: top 0.2s ease-in-out, bottom 0.2s ease-in-out, transform 0.2s ease-in-out, background-color 0.001s ease-in-out;
  z-index: 10;
}

.burger-btn span::before,
.burger-btn span::after {
  content: "";
  position: absolute;
  bottom: 5px;
  z-index: 100;
}

.burger-btn span::after {
  bottom: -5px;
}

.burger-btn span.x {
  background-color: rgba(0, 0, 0, 0);
}

.burger-btn span.x::before {
  transform: rotate(45deg);
  top: 0;
}

.burger-btn span.x::after {
  transform: rotate(-45deg);
  bottom: 0;
}

@media screen and (min-width: 500px) {
  #burger-btn {
    display: none;
  }
}
@media screen and (min-width: 700px) {
  .header-cta {
    display: block;
  }
}
.cards-wrapper {
  display: flex;
  flex-direction: column;
}

.card-icon {
  margin-bottom: 26px;
}

.card h3 {
  margin-bottom: 20px;
}

.card > p {
  margin-bottom: 32px;
}

.excerpt-card {
  background-color: hsl(0deg, 0%, 100%);
  border-radius: 5px;
  overflow: hidden;
  text-align: left;
  margin-bottom: 32px;
}

.excerpt-card__meta,
.excerpt-card__title,
.excerpt-card__content {
  padding-left: 31px;
  padding-right: 31px;
  font-size: 13px;
  line-height: 18px;
  letter-spacing: -0.015em;
}

.excerpt-card__meta {
  font-size: 10px;
  line-height: 16px;
  letter-spacing: -0.02em;
  margin-bottom: 8px;
}

h3.excerpt-card__title {
  font-size: 17px;
  line-height: 20px;
  letter-spacing: -0.048em;
  margin-bottom: 10px;
}

.excerpt-card__img {
  width: 100%;
  height: 200px;
  background-size: cover;
  background-position: center;
  margin-bottom: 28px;
}

.excerpt-card:nth-of-type(1) .excerpt-card__img {
  background-image: url(../images/image-currency.jpg);
}

.excerpt-card:nth-of-type(2) .excerpt-card__img {
  background-image: url(../images/image-restaurant.jpg);
}

.excerpt-card:nth-of-type(3) .excerpt-card__img {
  background-image: url(../images/image-plane.jpg);
}

.excerpt-card:nth-of-type(4) .excerpt-card__img {
  background-image: url(../images/image-confetti.jpg);
}

@media screen and (min-width: 1000px) {
  .cards-wrapper {
    flex-direction: row;
    align-items: flex-end;
    justify-content: space-between;
    flex-wrap: wrap;
  }
  .articles .cards-wrapper {
    align-items: unset;
  }
  .card {
    flex-basis: 256px;
    text-align: left;
    margin-right: 0;
  }
  .card-icon {
    margin-bottom: 32px;
  }
  .card h3:not(h3.excerpt-card__title) {
    font-size: 24px;
    line-height: 38px;
    letter-spacing: -0.022em;
    margin-bottom: 22px;
  }
  .card > p:not(.excerpt-card__content) {
    font-size: 16px;
    line-height: 26px;
    letter-spacing: -0.015em;
  }
  .excerpt-card__meta,
  .excerpt-card__title,
  .excerpt-card__content {
    padding-left: 24px;
    padding-right: 24px;
  }
  .excerpt-card__img {
    margin-bottom: 26px;
  }
}
/*----------  layout
------------------------------------------------------------------------------*/
header {
  width: 100%;
  background-color: hsl(0deg, 0%, 100%);
  position: relative;
  height: 64px;
  display: flex;
  justify-content: space-between;
  align-items: center;
  z-index: 10;
}

nav.main-menu {
  position: absolute;
  display: block;
  width: 100%;
  top: 88px;
  left: 0;
  padding-left: 16px;
  padding-right: 16px;
  text-align: center;
  transform: translateY(-100vh);
  transition: transform 350ms ease-out;
}
nav.main-menu a {
  color: hsl(233deg, 26%, 24%);
  font-size: 20px;
  letter-spacing: -0.085em;
}
nav.main-menu ul {
  background-color: hsl(0deg, 0%, 100%);
  border-radius: 4px;
  padding: 32px;
  width: 100%;
}
nav.main-menu ul li:not(:last-of-type) {
  margin-bottom: 25px;
}
nav.main-menu::before {
  background-image: linear-gradient(rgba(0, 0, 0, 0.6) 0%, rgba(0, 0, 0, 0.1) 80%, rgba(0, 0, 0, 0.01) 100%);
  position: absolute;
  content: "";
  top: -24px;
  left: 0;
  display: block;
  width: 100%;
  height: calc(100vh - 64px);
  z-index: -1;
}

nav.main-menu.o {
  transform: translateY(0%);
}

@media screen and (min-width: 500px) {
  header {
    height: 80px;
  }
  .logo-wrapper {
    padding-top: 6px;
    margin-right: 5px;
  }
  nav.main-menu {
    display: block;
    text-align: left;
    transform: none;
    position: static;
    padding: 0;
    width: auto;
  }
  nav.main-menu::before {
    content: none;
  }
  nav.main-menu a {
    font-size: 15px;
    color: hsl(233deg, 8%, 62%);
    letter-spacing: -0.035em;
  }
  nav.main-menu ul {
    display: flex;
    flex-direction: row;
    justify-content: center;
    align-items: center;
    padding: 0px;
    width: auto;
  }
  nav.main-menu ul li {
    position: relative;
    height: 80px;
    display: flex;
    justify-content: center;
    align-items: center;
  }
  nav.main-menu ul li:not(:last-of-type) {
    margin-bottom: 0;
  }
  nav.main-menu ul li::before {
    content: "";
    position: absolute;
    bottom: -4px;
    height: 4px;
    width: 100%;
    left: 0;
    transition: 0.3s;
    background: rgb(49, 211, 92);
    background: linear-gradient(180deg, rgb(49, 211, 92) 0%, rgb(43, 183, 218) 100%);
    opacity: 0;
  }
  .main-menu ul li:hover::before {
    bottom: 0;
    opacity: 1;
  }
  .main-menu ul li:not(:last-of-type) {
    margin-right: 20px;
  }
  .main-menu ul li a:hover {
    color: hsl(233deg, 26%, 24%);
  }
}
@media screen and (min-width: 1000px) {
  .main-menu ul li:not(:last-of-type) {
    margin-right: 34px;
    margin-right: 30px;
  }
  .logo-wrapper {
    padding-top: 6px;
    margin-right: 22px;
  }
}
.hero {
  display: flex;
  flex-direction: column;
}

.hero_img, .hero_text {
  width: 100%;
}

.hero_img {
  display: flex;
  position: relative;
  height: 281px;
  height: 298px;
  background-image: url(../images/bg-intro-mobile.svg);
  background-repeat: no-repeat;
  background-size: cover;
  background-size: 106%;
  background-position: 70% 46%;
  background-position: 70% 53%;
  z-index: 2;
}

.hero_img img {
  position: absolute;
  width: 96%;
  bottom: 0;
  left: 50%;
  transform: translateX(-50%);
  z-index: 100;
}

.hero_text {
  padding: 22px 10px 0px 10px;
  text-align: center;
}
.hero_text h2 {
  font-size: 40px;
  line-height: 47px;
  text-align: center;
  letter-spacing: -0.02em;
  margin-bottom: 18px;
}
.hero_text p {
  margin-bottom: 32px;
}
.hero_text button {
  margin-bottom: 88px;
}

@media screen and (min-width: 376px) {
  .hero_img {
    height: 350px;
  }
}
@media screen and (min-width: 450px) {
  .hero_img {
    height: 400px;
  }
}
@media screen and (min-width: 850px) {
  .hero {
    flex-direction: row;
    background-color: hsl(0deg, 0%, 98%);
  }
  .hero_img {
    order: 2;
    width: 57%;
    height: auto;
    background-image: url(../images/bg-intro-desktop.svg);
    background-repeat: no-repeat;
    background-size: cover;
    background-position: -1.5% 70%;
  }
  .hero_img img {
    top: 50px;
    left: unset;
    right: -10%;
    transform: unset;
  }
  .hero_text {
    padding: 90px 10px 0px 158px;
    text-align: left;
    width: 43%;
  }
  .hero_text h2 {
    font-size: 56px;
    text-align: left;
    letter-spacing: -0.02em;
    line-height: 64px;
    margin-bottom: 24px;
  }
  .hero_text p {
    margin-bottom: 36px;
  }
  .hero_text button {
    margin-bottom: 170px;
  }
}
@media screen and (min-width: 1200px) {
  .hero_img {
    background-size: 157%;
    background-position: -1% 68.6%;
  }
  .hero_img img {
    width: unset;
    bottom: unset;
    top: -122px;
    right: -140px;
  }
  .hero_text {
    padding: 170px 10px 0px 158px;
    text-align: left;
    width: 43%;
  }
}
.features {
  background-color: hsl(220deg, 16%, 96%);
  text-align: center;
  padding-top: 64px;
  padding-left: 14px;
  padding-right: 14px;
  padding-bottom: 32px;
}
.features h2 {
  margin-bottom: 14px;
}

.features > p {
  margin-bottom: 56px;
}

@media screen and (min-width: 1000px) {
  .features {
    padding-left: 156px;
    padding-right: 156px;
    padding-top: 110px;
    padding-bottom: 70px;
    text-align: left;
  }
  .features h2 {
    font-size: 40px;
    margin-bottom: 28px;
  }
  .features > p {
    margin-bottom: 70px;
    font-size: 19px;
    line-height: 29px;
    letter-spacing: -0.041em;
    width: 60%;
  }
}
.articles {
  background-color: hsl(0deg, 0%, 98%);
  text-align: center;
  padding-left: 15px;
  padding-right: 15px;
  padding-top: 88px;
  padding-bottom: 60px;
}
.articles h2 {
  margin-bottom: 30px;
}

@media screen and (min-width: 1000px) {
  .articles {
    padding-left: 156px;
    padding-right: 156px;
    padding-top: 92px;
    padding-bottom: 38px;
    text-align: left;
  }
  .articles h2 {
    font-size: 40px;
    margin-bottom: 54px;
  }
}
footer {
  background-color: hsl(233deg, 26%, 24%);
  display: flex;
  flex-direction: column;
  text-align: center;
  padding-top: 40px;
  padding-bottom: 45px;
}
footer a {
  color: hsl(0deg, 0%, 100%);
  display: block;
  margin-bottom: 19px;
}
footer .logo {
  margin-bottom: 31px;
}

.soc-icons {
  margin-bottom: 36px;
}
.soc-icons img {
  width: 24px;
  height: 24px;
}
.soc-icons img:not(img:last-of-type) {
  margin-right: 12px;
}

.footer-nav {
  margin-bottom: 18px;
}

.footer-nav ul {
  -moz-column-count: 1;
  column-count: 1;
}

.copy button {
  margin-bottom: 28px;
}

.copy span {
  display: block;
  font-size: 15px;
  line-height: 18px;
  letter-spacing: -0.015em;
}

@media screen and (min-width: 1000px) {
  footer {
    flex-direction: row;
    text-align: left;
    padding-top: 50px;
    padding-bottom: 33px;
  }
  footer .logo {
    margin-bottom: 52px;
  }
  footer .column:first-of-type {
    margin-right: 130px;
  }
  .footer-nav {
    margin-bottom: 0px;
    padding-top: 6px;
  }
  .footer-nav ul {
    -moz-column-count: 2;
    column-count: 2;
    -moz-column-gap: 93px;
    column-gap: 93px;
  }
  .soc-icons {
    margin-bottom: 0px;
  }
  .soc-icons img {
    width: 21px;
    height: 21px;
  }
  .soc-icons img:not(img:last-of-type) {
    margin-right: 9px;
  }
  .copy {
    margin-left: auto;
    text-align: right;
  }
}
/*----------  pages
------------------------------------------------------------------------------*/
* {
  box-sizing: border-box;
}

body {
  width: 100%;
  min-height: 100vh;
  background-color: hsl(0deg, 0%, 100%);
  overflow-x: hidden;
}

.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0, 0);
  border: 0;
}

.hidden {
  display: none;
}

header, section, footer {
  padding-left: 24px;
  padding-right: 24px;
  width: 100%;
}
header h2, section h2, footer h2 {
  font-size: 32px;
  line-height: 38px;
  letter-spacing: -0.02em;
}

header {
  padding-left: 16px;
  padding-right: 16px;
}

section.hero {
  padding: 0;
}

@media screen and (min-width: 1000px) {
  header, section, footer {
    padding-left: 165px;
    padding-right: 165px;
  }
  header, section, footer {
    padding-left: 156px;
    padding-right: 156px;
  }
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
